{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Projects\\\\React Flask Library\\\\react-flask-library\\\\src\\\\Components\\\\BookForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookForm = props => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [selectedBook, setSelectedBook] = useState(null);\n\n  if (props.selectedBook && props.selectedBook !== selectedBook) {\n    setSelectedBook(props.selectedBook);\n    setTitle(props.selectedBook.title);\n    setAuthor(props.selectedBook.author);\n    setDescription(props.selectedBook.description);\n    setErrorMessage(\"\");\n  }\n\n  const clearForm = () => {\n    setTitle(\"\");\n    setAuthor(\"\");\n    setDescription(\"\");\n  };\n\n  const validateForm = () => {\n    if (title !== \"\" && author !== \"\" && description !== \"\") {\n      return true;\n    } else {\n      setErrorMessage(\"Error: Missing fields\");\n      return false;\n    }\n  };\n\n  const saveNewBook = event => {\n    event.preventDefault();\n\n    if (validateForm()) {\n      const book = {\n        title,\n        author,\n        description\n      };\n      fetch(\"api/books/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(book)\n      }).then(response => props.callUpdateBookList(response));\n      clearForm();\n    }\n  };\n\n  const updateBook = event => {\n    event.preventDefault();\n\n    if (validateForm()) {\n      const book = {\n        title,\n        author,\n        description\n      };\n      fetch(\"api/books/\" + props.selectedBook.book_id + \"/\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(book)\n      }).then(response => props.callUpdateBookList(response));\n    }\n  };\n\n  const deleteBook = event => {\n    event.preventDefault();\n    fetch(\"api/books/\" + props.selectedBook.book_id + \"/\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => props.callBookDeleted(response));\n    clearForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      value: title,\n      onChange: e => {\n        setTitle(e.target.value);\n        setErrorMessage(\"\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"author\",\n      children: \"Author:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"author\",\n      value: author,\n      onChange: e => {\n        setAuthor(e.target.value);\n        setErrorMessage(\"\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: \"Description:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"description\",\n      value: description,\n      onChange: e => {\n        setDescription(e.target.value);\n        setErrorMessage(\"\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => saveNewBook(e),\n      children: \"Save New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => updateBook(e),\n      disabled: !props.selectedBook,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => deleteBook(e),\n      disabled: !props.selectedBook,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errorMessage\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 1\n  }, this);\n};\n\n_s(BookForm, \"0s+QTVKctOmECjsB4+5rzm1z9VM=\");\n\n_c = BookForm;\nexport default BookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookForm\");","map":{"version":3,"sources":["D:/Web Projects/React Flask Library/react-flask-library/src/Components/BookForm.js"],"names":["React","useState","BookForm","props","title","setTitle","author","setAuthor","description","setDescription","errorMessage","setErrorMessage","selectedBook","setSelectedBook","clearForm","validateForm","saveNewBook","event","preventDefault","book","fetch","method","headers","body","JSON","stringify","then","response","callUpdateBookList","updateBook","book_id","deleteBook","callBookDeleted","e","target","value"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react';\r\n\r\nconst BookForm = (props) => {\r\nconst [title, setTitle] = useState(\"\")\r\nconst [author, setAuthor] = useState(\"\")\r\nconst [description, setDescription] = useState(\"\")\r\nconst [errorMessage, setErrorMessage] = useState(null)\r\nconst [selectedBook, setSelectedBook] = useState(null)\r\n\r\nif (props.selectedBook && props.selectedBook !== selectedBook) {\r\nsetSelectedBook(props.selectedBook)\r\nsetTitle(props.selectedBook.title)\r\nsetAuthor(props.selectedBook.author)\r\nsetDescription(props.selectedBook.description)\r\nsetErrorMessage(\"\")\r\n}\r\n\r\nconst clearForm = () => {\r\nsetTitle(\"\")\r\nsetAuthor(\"\")\r\nsetDescription(\"\")\r\n}\r\n\r\nconst validateForm = () => {\r\nif (title !== \"\" && author !== \"\" && description !== \"\") {\r\nreturn true\r\n} else {\r\nsetErrorMessage(\"Error: Missing fields\")\r\nreturn false\r\n}\r\n}\r\n\r\nconst saveNewBook = (event) => { \r\nevent.preventDefault()\r\nif (validateForm()) {\r\nconst book = { title, author, description }\r\nfetch(\"api/books/\", {\r\nmethod: \"POST\",\r\nheaders: { \"Content-Type\": \"application/json\"},\r\nbody: JSON.stringify(book)\r\n})\r\n.then((response) => props.callUpdateBookList(response))\r\nclearForm()\r\n}\r\n}\r\n\r\nconst updateBook = (event) => { \r\nevent.preventDefault()\r\nif (validateForm()) {\r\nconst book = { title, author, description }\r\nfetch(\"api/books/\" + props.selectedBook.book_id + \"/\", {\r\nmethod: \"PUT\",\r\nheaders: { \"Content-Type\": \"application/json\"},\r\nbody: JSON.stringify(book)\r\n})\r\n.then((response) => props.callUpdateBookList(response))\r\n}\r\n}\r\n\r\nconst deleteBook = (event) => {\r\nevent.preventDefault()\r\n\r\nfetch(\"api/books/\" + props.selectedBook.book_id + \"/\", {\r\nmethod: \"DELETE\",\r\nheaders: { \"Content-Type\": \"application/json\"},\r\n})\r\n.then((response) => props.callBookDeleted(response))\r\nclearForm()\r\n}\r\n\r\n  return (\r\n<form>\r\n<label htmlFor=\"title\">Title:</label>\r\n<input\r\ntype=\"text\"\r\nid=\"title\"\r\nvalue={title}\r\nonChange={(e)=>{setTitle(e.target.value);\r\nsetErrorMessage(\"\")}\r\n}\r\n/>\r\n\r\n<label htmlFor=\"author\">Author:</label>\r\n<input\r\ntype=\"text\"\r\nid=\"author\"\r\nvalue={author}\r\nonChange={(e)=>{setAuthor(e.target.value);\r\nsetErrorMessage(\"\")}\r\n}\r\n/>\r\n\r\n<label htmlFor=\"description\">Description:</label>\r\n<textarea\r\nid=\"description\"\r\nvalue={description}\r\nonChange={(e)=>{setDescription(e.target.value);\r\nsetErrorMessage(\"\")}\r\n}\r\n/>\r\n\r\n<button onClick={(e) => saveNewBook(e)}>\r\nSave New</button>\r\n\r\n<button onClick={(e) => updateBook(e)}\r\ndisabled={!props.selectedBook}>\r\nSave</button>\r\n\r\n<button onClick={(e) => deleteBook(e)}\r\ndisabled={!props.selectedBook}>\r\nDelete</button>\r\n\r\n<p className=\"errorMessage\">{errorMessage}</p>\r\n</form>\r\n)\r\n}\r\n\r\nexport default BookForm;"]},"metadata":{},"sourceType":"module"}