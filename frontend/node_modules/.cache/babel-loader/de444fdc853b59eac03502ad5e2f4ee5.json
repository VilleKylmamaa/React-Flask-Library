{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Projects\\\\React Flask Library\\\\react-flask-library\\\\src\\\\Components\\\\BookForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // Insert a book\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function insertBook(body) {\n  try {\n    const response = await fetch(\"/books/\", {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    return await response.json();\n  } catch (error) {\n    return console.log(error);\n  }\n} // Form\n\n\nconst BookForm = props => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [description, setDescription] = useState('');\n  const [body, setBody] = useState('');\n  insertBook({\n    title,\n    body\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    insertBook();\n    setTitle('');\n    setAuthor('');\n    setDescription('');\n    setBody('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"author\",\n      children: \"Author:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"author\",\n      value: author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: \"Description:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"description\",\n      value: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      form: \"form1\",\n      value: \"Submit\",\n      children: \"Save New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this)\n  /* \r\n  <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n  <input \r\n  type=\"text\"\r\n  className=\"form-control\" \r\n  placeholder =\"Enter title\"\r\n  value={title}\r\n  onChange={(e)=>setTitle(e.target.value)}\r\n  required\r\n  />\r\n    <label htmlFor=\"body\" className=\"form-label\">Body</label>\r\n  <textarea \r\n  className=\"form-control\" \r\n  placeholder =\"Enter body\" \r\n  rows='6'\r\n  value={body}\r\n  onChange={(e)=>setBody(e.target.value)}\r\n  required\r\n  >\r\n  </textarea>\r\n    <button \r\n  className=\"btn btn-primary mt-2\"\r\n  >\r\n  Publish article</button>\r\n   */\n  ;\n};\n\n_s(BookForm, \"fn+NAmWemdCG0cOPwxQEy9706NM=\");\n\n_c = BookForm;\nexport default BookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookForm\");","map":{"version":3,"sources":["D:/Web Projects/React Flask Library/react-flask-library/src/Components/BookForm.js"],"names":["React","useState","insertBook","body","response","fetch","headers","JSON","stringify","json","error","console","log","BookForm","props","title","setTitle","author","setAuthor","description","setDescription","setBody","handleSubmit","event","preventDefault","e","target","value"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAGA;;;;AACA,eAAeC,UAAf,CAA0BC,IAA1B,EAAgC;AAC5B,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAD,EAAY;AACpC,gBAAU,MAD0B;AAEpCC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAF2B;AAGpCH,MAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAH8B,KAAZ,CAA5B;AAKA,WAAO,MAAMC,QAAQ,CAACK,IAAT,EAAb;AACH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,WAAOC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAP;AACH;AACJ,C,CAGD;;;AACA,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACE,IAAD,EAAOkB,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,UAAU,CAAC;AAACa,IAAAA,KAAD;AAAQZ,IAAAA;AAAR,GAAD,CAAV;;AAEA,QAAMmB,YAAY,GAAEC,KAAD,IAAS;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACAtB,IAAAA,UAAU;AACVc,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAPD;;AASF,sBAEM;AAAM,IAAA,QAAQ,EAAIC,YAAlB;AAAA,4BACQ;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,eAEQ;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,OAAtB;AACA,MAAA,KAAK,EAAEP,KADP;AAEA,MAAA,QAAQ,EAAGU,CAAD,IAAKT,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAFvB;AAAA;AAAA;AAAA;AAAA,YAFR,eAOM;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPN,eAQM;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,QAAtB;AAA+B,MAAA,KAAK,EAAEV;AAAtC;AAAA;AAAA;AAAA;AAAA,YARN,eAUM;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVN,eAWM;AAAU,MAAA,EAAE,EAAC,aAAb;AAA2B,MAAA,KAAK,EAAEE;AAAlC;AAAA;AAAA;AAAA;AAAA,YAXN,eAaM;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAC,OAA3B;AAAmC,MAAA,KAAK,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbN;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5CE;AA+CE,CAhEJ;;GAAMN,Q;;KAAAA,Q;AAkEN,eAAeA,QAAf","sourcesContent":["\r\nimport React, { useState } from 'react';\r\n\r\n\r\n// Insert a book\r\nasync function insertBook(body) {\r\n    try {\r\n        const response = await fetch(\"/books/\", {\r\n            'method': 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(body)\r\n        });\r\n        return await response.json();\r\n    } catch (error) {\r\n        return console.log(error);\r\n    }\r\n}\r\n\r\n\r\n// Form\r\nconst BookForm = (props) => {\r\n    const [title, setTitle] = useState('')\r\n    const [author, setAuthor] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [body, setBody] = useState('')\r\n\r\n    insertBook({title, body})\r\n\r\n    const handleSubmit=(event)=>{ \r\n      event.preventDefault()\r\n      insertBook()\r\n      setTitle('')\r\n      setAuthor('')\r\n      setDescription('')\r\n      setBody('')\r\n    }\r\n\r\n  return (\r\n\r\n        <form onSubmit = {handleSubmit} >\r\n                <label htmlFor=\"title\">Title:</label>\r\n                <input type=\"text\" id=\"title\" \r\n                value={title} \r\n                onChange={(e)=>setTitle(e.target.value)}\r\n                />\r\n\r\n              <label htmlFor=\"author\">Author:</label>\r\n              <input type=\"text\" id=\"author\" value={author}></input>\r\n\r\n              <label htmlFor=\"description\">Description:</label>\r\n              <textarea id=\"description\" value={description}></textarea>\r\n\r\n              <button type=\"submit\" form=\"form1\" value=\"Submit\">Save New</button>\r\n              {/* <button type=\"submit\" form=\"form1\" value=\"Submit\">Save</button>\r\n              <button type=\"submit\" form=\"form1\" value=\"Submit\">Delete</button> */}\r\n        </form>\r\n\r\n          /* \r\n          <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n          <input \r\n          type=\"text\"\r\n          className=\"form-control\" \r\n          placeholder =\"Enter title\"\r\n          value={title}\r\n          onChange={(e)=>setTitle(e.target.value)}\r\n          required\r\n          />\r\n\r\n          <label htmlFor=\"body\" className=\"form-label\">Body</label>\r\n          <textarea \r\n          className=\"form-control\" \r\n          placeholder =\"Enter body\" \r\n          rows='6'\r\n          value={body}\r\n          onChange={(e)=>setBody(e.target.value)}\r\n          required\r\n          >\r\n          </textarea>\r\n\r\n          <button \r\n          className=\"btn btn-primary mt-2\"\r\n          >\r\n          Publish article</button>\r\n           */     \r\n  )}\r\n\r\nexport default BookForm;"]},"metadata":{},"sourceType":"module"}