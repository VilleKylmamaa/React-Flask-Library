{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Projects\\\\React Flask Library\\\\react-flask-library\\\\src\\\\Components\\\\BookForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookForm = props => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [selectedBook, setSelectedBook] = useState(null);\n  useEffect(() => {\n    if (props.selectedBook && props.selectedBook != selectedBook) {\n      setSelectedBook(props.selectedBook);\n      setTitle(props.selectedBook.title);\n      setAuthor(props.selectedBook.author);\n      setDescription(props.selectedBook.description);\n    }\n  });\n\n  const saveNewBook = event => {\n    event.preventDefault();\n    const book = {\n      title,\n      author,\n      description\n    };\n    fetch(\"api/books/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(book)\n    }).then(response => props.updateBookList(response));\n    setTitle(\"\");\n    setAuthor(\"\");\n    setDescription(\"\");\n  };\n\n  const deleteBook = event => {\n    event.preventDefault();\n    fetch(\"api/books/\" + props.selectedBook.book_id + \"/\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => props.updateBookList(response));\n    setTitle(\"\");\n    setAuthor(\"\");\n    setDescription(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"author\",\n      children: \"Author:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"author\",\n      value: author,\n      onChange: e => setAuthor(e.target.value),\n      reiu: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: \"Description:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => saveNewBook(e),\n      children: \"Save New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: true,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => deleteBook(e),\n      disabled: !props.selectedBook,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookForm, \"xRZum8uBL9wcpaiFPVxFqRjoZEo=\");\n\n_c = BookForm;\nexport default BookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookForm\");","map":{"version":3,"sources":["D:/Web Projects/React Flask Library/react-flask-library/src/Components/BookForm.js"],"names":["React","useState","useEffect","BookForm","props","title","setTitle","author","setAuthor","description","setDescription","selectedBook","setSelectedBook","saveNewBook","event","preventDefault","book","fetch","method","headers","body","JSON","stringify","then","response","updateBookList","deleteBook","book_id","e","target","value"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst BookForm = (props) => {\r\n    const [title, setTitle] = useState(\"\")\r\n    const [author, setAuthor] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [selectedBook, setSelectedBook] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (props.selectedBook && props.selectedBook != selectedBook) {\r\n            setSelectedBook(props.selectedBook)\r\n            setTitle(props.selectedBook.title)\r\n            setAuthor(props.selectedBook.author)\r\n            setDescription(props.selectedBook.description)\r\n        }\r\n    });\r\n\r\n    const saveNewBook = (event) => { \r\n        event.preventDefault()\r\n        const book = { title, author, description }\r\n\r\n        fetch(\"api/books/\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(book)\r\n        })\r\n        .then((response) => props.updateBookList(response))\r\n\r\n        setTitle(\"\")\r\n        setAuthor(\"\")\r\n        setDescription(\"\")\r\n    }\r\n\r\n    const deleteBook = (event) => {\r\n        event.preventDefault()\r\n\r\n        fetch(\"api/books/\" + props.selectedBook.book_id + \"/\", {\r\n            method: \"DELETE\",\r\n            headers: { \"Content-Type\": \"application/json\"},\r\n        })\r\n        .then((response) => props.updateBookList(response))\r\n\r\n        setTitle(\"\")\r\n        setAuthor(\"\")\r\n        setDescription(\"\")\r\n    }\r\n\r\n  return (\r\n        <form>\r\n            <label htmlFor=\"title\">Title:</label>\r\n            <input\r\n                type=\"text\" \r\n                id=\"title\" \r\n                value={title} \r\n                onChange={(e)=>setTitle(e.target.value)}\r\n            />\r\n\r\n            <label htmlFor=\"author\">Author:</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"author\"\r\n                value={author}\r\n                onChange={(e)=>setAuthor(e.target.value)}\r\n                reiu\r\n            />\r\n\r\n            <label htmlFor=\"description\">Description:</label>\r\n            <textarea\r\n                id=\"description\"\r\n                value={description}\r\n                onChange={(e)=>setDescription(e.target.value)}\r\n            />\r\n\r\n            <button onClick={(e) => saveNewBook(e)}>Save New</button>\r\n            <button type=\"submit\" disabled={true}>Save</button>\r\n            <button onClick={(e) => deleteBook(e)} disabled={!props.selectedBook}>Delete</button>\r\n        </form>   \r\n    )\r\n}\r\n\r\nexport default BookForm;"]},"metadata":{},"sourceType":"module"}